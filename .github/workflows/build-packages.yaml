name: Build packages

on:
  repository_dispatch:
  workflow_dispatch:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
    paths:
      - ".github/workflows/build-packages.yaml"
      - "flake.lock"
      - "packages/**"

permissions:
  contents: read
  pull-requests: read

jobs:
  list-packages:
    name: List packages
    runs-on: ubuntu-latest
    outputs:
      ospackages: ${{ steps.list-packages.outputs.ospackages }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install nix and flakes
        uses: DeterminateSystems/nix-installer-action@v17
      - name: List packages
        id: list-packages
        run: |
          ospackages=$(nix flake show --all-systems --json | jq -cr '
            .packages // {} |
            with_entries(
              if (.value | type) == "object" then
                .value |= with_entries(select(.key != "update-packages"))
              else
                .value = {}
              end
            ) |
            with_entries(
              if (.value | type) == "object" then
                .value |= keys
              else
                .value = []
              end
            ) |
            to_entries |
            map(select(.value | length > 0)) |
            map(
              .key as $platform |
              .value[] as $package |
              {
                os: (
                  if $platform == "x86_64-linux" then "ubuntu-latest"
                  elif $platform == "aarch64-linux" then "ubuntu-24.04-arm"
                  elif $platform == "aarch64-darwin" then "macos-latest"
                  elif $platform == "x86_64-darwin" then "macos-13"
                  else $platform
                  end
                ),
                package: $package
              }
            )
          ')
          echo "ospackages=$ospackages" >> $GITHUB_OUTPUT

  build-packages:
    name: Build packages
    needs: list-packages
    strategy:
      matrix:
        ospackages: ${{ fromJson(needs.list-packages.outputs.ospackages) }}
    runs-on: ${{ matrix.ospackages.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install nix and flakes
        uses: DeterminateSystems/nix-installer-action@v17
      - name: Setup cachix cache
        uses: cachix/cachix-action@v16
        with:
          name: nichijou
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
          extraPullNames: catppuccin,colmena,deadnix,hyprland,nix-community,nixpkgs-wayland,numtide,zed
      - name: Build package
        run: nix build .#${{ matrix.ospackages.package }} --no-link

  build-packages-finalize:
    name: Build packages finalize
    needs:
      - list-packages
      - build-packages
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "All packages built successfully."
          echo "Packages: $ospackages"
        env:
          ospackages: ${{ fromJson(needs.list-packages.outputs.ospackages) }}
