name: Update
on:
  repository_dispatch:
  workflow_dispatch:
  schedule:
    - cron: "0 4 * * *"
  push:
    branches:
      - main
    paths:
      - ".github/workflows/update.yaml"
permissions:
  pull-requests: write
  contents: write
jobs:
  update-flake-inputs:
    runs-on: ubuntu-latest
    name: Update flake inputs
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install nix and flakes
        uses: DeterminateSystems/nix-installer-action@v17
      - name: Update flake lock
        uses: DeterminateSystems/update-flake-lock@v25
        id: update-lock
        with:
          token: ${{ secrets.ACTIONS_PR_TOKEN }}
          pr-title: "Automated update of flake lock"
          pr-labels: |
            dependencies
            automated
            merge-queue
      - name: Auto merge Pull Request
        if: steps.update-lock.outputs.pull-request-operation == 'created'
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.ACTIONS_PR_TOKEN }}
          pull-request-number: ${{ steps.update-lock.outputs.pull-request-number }}
          merge-method: squash
  update-packages:
    runs-on: ubuntu-latest
    name: Update packages
    outputs:
      pull-request-number: ${{ steps.update-packages.outputs.pull-request-number }}
      pull-request-operation: ${{ steps.update-packages.outputs.pull-request-operation }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Install nix and flakes
        uses: DeterminateSystems/nix-installer-action@v17
      - name: Update packages
        run: |
          for update_script in $(find nix/packages -name update.sh); do
            echo "Running $update_script"
            bash "$update_script"
          done
      - name: Create Pull Request if there are changes
        uses: peter-evans/create-pull-request@v7
        id: update-packages
        with:
          token: ${{ secrets.ACTIONS_PR_TOKEN }}
          commit-message: "chore: update packages"
          title: "Automated update of packages"
          body: |
            This PR updates packages with the latest versions.
            Automated by the update workflow.
          branch: update_packages_action
          labels: |
            dependencies
            automated
            merge-queue
      - name: Auto merge Pull Request
        if: steps.update-packages.outputs.pull-request-operation == 'created'
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          token: ${{ secrets.ACTIONS_PR_TOKEN }}
          pull-request-number: ${{ steps.update-packages.outputs.pull-request-number }}
          merge-method: squash
